version: 0.2
phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 026090546401.dkr.ecr.us-west-2.amazonaws.com
      - 'IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)'
      - 'echo "Image Tag: $IMAGE_TAG"'
      - 'REPO_URI=026090546401.dkr.ecr.us-west-2.amazonaws.com/ecommerce-flask'
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
      - unzip -q sonar-scanner.zip
      - export PATH=$PATH:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin
  build:
    commands:
      - echo Running SonarQube Analysis on EC2-hosted SonarQube...
      - sonar-scanner -Dsonar.projectKey=us-west-1 -Dsonar.sources=. -Dsonar.host.url=http://52.207.249.7 -Dsonar.login=sqp_cb963e2e6d4c8da1b35546485916a1e40ca5c32a
      - 'echo "Build started on $(date)"'
      - 'docker build -t ${REPO_URI}:${IMAGE_TAG} .'
      - 'docker tag ${REPO_URI}:${IMAGE_TAG} ${REPO_URI}:latest'
  post_build:
    commands:
      - 'echo "Build completed on $(date)"'
      - 'docker push ${REPO_URI}:${IMAGE_TAG}'
      - 'docker push ${REPO_URI}:latest'
      - 'echo "Updating Kubernetes deployment..."'
      - 'sed -i "s|image: .*|image: ${REPO_URI}:${IMAGE_TAG}|" k8s/deployment.yaml'
      - 'aws eks update-kubeconfig --region us-west-2 --name ecommerce-cluster'
      - 'kubectl apply -f k8s/'
artifacts:
  files:
    - k8s/deployment.yaml
